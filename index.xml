<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>myDocs</title>
    <link>https://amintasvrp.github.io/myDocs/</link>
    <description>Recent content on myDocs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Mar 2016 21:07:13 +0100</lastBuildDate>
    
	<atom:link href="https://amintasvrp.github.io/myDocs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C: Programação Imperativa em Baixo Nível</title>
      <link>https://amintasvrp.github.io/myDocs/c/</link>
      <pubDate>Sun, 17 Jun 2018 23:59:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/c/</guid>
      <description>Introdução C é uma linguagem de programação imperativa de propósito geral, com tipagem estática. Além disso, é uma linguagem de baixo nível, o que significa que fornece construções que mapeiam de forma eficiente para as instruções típicas da máquina. Basicamente, é uma maneira mais fácil de escrever programas de baixo nível. Em vez de escrever código de baixo nível em uma linguagem de montagem, você pode abstrair muito e escrever programas equivalentes em C.</description>
    </item>
    
    <item>
      <title>C&#43;&#43;: Programação Imperativa e Orientada a Objetos</title>
      <link>https://amintasvrp.github.io/myDocs/cpp/</link>
      <pubDate>Sun, 17 Jun 2018 23:58:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/cpp/</guid>
      <description>Introdução C++ é uma linguagem de programação orientada a objetos, de tipagem estática, de uso geral. Por vários anos, a linguagem evoluiu até o lançamento oficial em 1985. C++ é essencialmente uma extensão da linguagem de programação C, portanto muitas das coisas que você pode fazer em C você também pode fazer em C++. Ambas são amplamente compatíveis e, em muitos casos, o código C pode ser usado com pouca ou nenhuma modificação como código C++.</description>
    </item>
    
    <item>
      <title>Haskell I: Introdução ao Paradigma Funcional</title>
      <link>https://amintasvrp.github.io/myDocs/haskell/</link>
      <pubDate>Sun, 17 Jun 2018 23:57:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/haskell/</guid>
      <description>Básico Operadores Básicos  + - * / mod sqrt  Operadores Lógicos  &amp;amp;&amp;amp; || not  Operadores Relacionais  &amp;gt; &amp;lt; &amp;gt;= &amp;lt;= == /=  Declarando Valores  x = a  Comentários  -- linha comentada {- - bloco comentado -}  Funções Aplicação  f x y == (f x) y == x &#39;f&#39; y  Expressões Condicionais  nomeFuncao param = if cond then resultado1 else resultado2  Equações Guardadas  nomeFuncao param | cond = resultado1 | otherwise = resultado2  Expressões Case  funcao xs = case expression of pattern1 -&amp;gt; result1 pattern2 -&amp;gt; result2  Definição local  -- relacionamos expressões com variáveis, melhorando visibilidade e escopo locais -- (where) funcao xs = .</description>
    </item>
    
    <item>
      <title>Hugo: Um Gerador de Sites Estáticos</title>
      <link>https://amintasvrp.github.io/myDocs/hugo/</link>
      <pubDate>Sun, 17 Jun 2018 23:56:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/hugo/</guid>
      <description>Um site estático consiste em um aplicativo da Web simples, no qual o conteúdo exposto é o mesmo para todos os que acessam, como blogs, periódicos, portfólios e portais de notícias. No entanto, no WordPress encontramos uma plataforma muito robusta para tal, já no tumblr e no blogger encontramos o oposto: é por isso que usamos o Hugo, um gerador de site estático.
Pré-requisitos Breves noções de HTML e Markdown.</description>
    </item>
    
    <item>
      <title>Linux: Conhecendo e Usando o Terminal</title>
      <link>https://amintasvrp.github.io/myDocs/linux/</link>
      <pubDate>Sun, 17 Jun 2018 23:55:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/linux/</guid>
      <description>Para aqueles que agora estão sendo introduzidos ao Linux, o manuseio do terminal pode, ao mesmo tempo, fascinar e dar um frio na barriga. A fim de aprender o básico sobre como lidar com essa ferramenta muito importante no uso de qualquer distribuição Linux, e claro, de perdermos qualquer preconceito sobre o prompt de comando, veremos neste artigo os principais comandos no terminal Linux
Arquivos e Diretórios Para encontrar o diretório atual, use o comando:</description>
    </item>
    
    <item>
      <title>Prolog e o Paradigma Lógico</title>
      <link>https://amintasvrp.github.io/myDocs/prolog/</link>
      <pubDate>Sun, 17 Jun 2018 23:54:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/prolog/</guid>
      <description>Mesmo diferentes paradigmas como Funcional e Imperativo têm algo em comum: ambos realizam mapeamento, isto é, lêem entradas e geram saídas. No entanto, um programa de acordo com o paradigma lógico implementa relacionamentos, que são mais gerais do que os mapeamentos. Em outras palavras, quando se trata de programação lógica, o nível é superior ao da programação imperativa ou funcional.
Paradigma Lógico Definimos as relações da seguinte forma:
 Considerando dois conjuntos S e T, dizemos que existe uma relação r entre S e T se, para cada x em S e y em T, a avaliação r(x, y) é verdadeira ou falsa.</description>
    </item>
    
    <item>
      <title>Python 3: Minimalismo e Legibilidade</title>
      <link>https://amintasvrp.github.io/myDocs/python/</link>
      <pubDate>Sun, 17 Jun 2018 23:53:59 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/python/</guid>
      <description>Introdução a Python Python é uma linguagem de programação orientada a objetos, dinamicamente tipificada e interpretada. A filosofia de design do Python é baseada em uma sintaxe não-tradicional e minimalista, girando em torno da legibilidade. Isso é feito usando-se espaço em branco para delinear escopos em vez das mais tradicionais chaves e ponto-e-vírgula. Geralmente todo o código python é executado usando um interpretador, sendo o mais popular e original chamado CPython, porque é implementado utilizando C e usa um coletor de lixo automático para gerenciar a memória.</description>
    </item>
    
    <item>
      <title>SQL e os Bancos de Dados Relacionais</title>
      <link>https://amintasvrp.github.io/myDocs/sql/</link>
      <pubDate>Sun, 17 Jun 2018 23:53:00 -0300</pubDate>
      
      <guid>https://amintasvrp.github.io/myDocs/sql/</guid>
      <description>Introdução a Banco de Dados O que é um Banco de Dados ? Se trata de qualquer coleção de dados que possui relação entre si. Bancos de dados podem ser armazenados de diversas formas, sendo mais úteis (potencialmente em larga escala) e seguros se forem guardados em computadores.
SGBD ou DBMS Um Sistema de Gerenciamento de Banco de Dados é um software que auxilia o usuário a criar e gerenciar um BD.</description>
    </item>
    
  </channel>
</rss>